<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="2.5">
		<!-- 加载顺序：content-param -> listener -> filter -> servlet -->

<!-- ****************************************************************************************************  -->		
		
		<!-- 配置spring -->
		<context-param>  
			<param-name>contextConfigLocation</param-name>  
			<param-value>
				classpath:spring.xml
			</param-value>  
		</context-param>  
		
		<!-- 配置log4j -->
		<context-param>
			<param-name>log4jConfigLocation</param-name>
			<param-value>classpath:log4j.properties</param-value>
		</context-param>
		
<!-- ****************************************************************************************************  -->		
		
		<!-- 配置spring的listener，加载其核心组建 -->
		<listener>
			<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
		</listener>
		
		<!-- 系统初始化 -->
		<listener>
			<listener-class>com.king.tooth.listener.LoadPropertiesFileListener</listener-class>
		</listener>
		<listener>
			<listener-class>com.king.tooth.listener.InitSysDataListener</listener-class>
		</listener>
		<listener>
			<listener-class>com.king.tooth.listener.InitSysJobListener</listener-class>
		</listener>
		
<!-- ****************************************************************************************************  -->		
		
		<!-- 配置跨域请求过滤器，解决跨域请求问题 -->
		<filter>
			<filter-name>corsFilter</filter-name>
			<filter-class>com.king.tooth.filter.CorsFilter</filter-class>
		</filter>
		<filter-mapping>
			<filter-name>corsFilter</filter-name>
			<url-pattern>/*</url-pattern>
		</filter-mapping>
		
		<!-- 配置记录方法执行时间过滤器，用作性能监控 -->
		<filter>
			<filter-name>funcExecTimeFilter</filter-name>
			<filter-class>com.king.tooth.filter.FuncExecTimeFilter</filter-class>
		</filter>
		<filter-mapping>
			<filter-name>funcExecTimeFilter</filter-name>
			<url-pattern>/*</url-pattern>
		</filter-mapping>
		
		<!-- 配置字符编码过滤器 -->
		<filter>
			<filter-name>encodingFilter</filter-name>
			<filter-class>com.king.tooth.filter.EncodingFilter</filter-class>
		</filter>
		<filter-mapping>
			<filter-name>encodingFilter</filter-name>
			<url-pattern>/*</url-pattern>
		</filter-mapping>
		
		<!-- 配置(简单)图片预览的过滤器，实现前端可通过http://ip:port/projectName/xxx的url格式访问图片 -->
		<filter>
			<filter-name>simpleImagePreviewFilter</filter-name>
			<filter-class>com.king.tooth.filter.SimpleImagePreviewFilter</filter-class>
		</filter>
		<filter-mapping>
			<filter-name>simpleImagePreviewFilter</filter-name>
			<url-pattern>/files/*</url-pattern><!-- files为上传文件时，保存到服务器中的根目录，即默认保存路径的根目录名称 -->
		</filter-mapping>
		
		<!-- 配置预处理的过滤器 -->
		<filter>
			<filter-name>prepareFilter</filter-name>
			<filter-class>com.king.tooth.filter.PrepareFilter</filter-class>
		</filter>
		<filter-mapping>
			<filter-name>prepareFilter</filter-name>
			<url-pattern>/common/*</url-pattern>
		</filter-mapping>
		<filter-mapping>
			<filter-name>prepareFilter</filter-name>
			<url-pattern>/file/*</url-pattern>
		</filter-mapping>
		
		<!-- 配置创建请求日志实例的过滤器 -->
		<filter>
			<filter-name>createReqLogInstanceFilter</filter-name>
			<filter-class>com.king.tooth.filter.CreateReqLogInstanceFilter</filter-class>
		</filter>
		<filter-mapping>
			<filter-name>createReqLogInstanceFilter</filter-name>
			<url-pattern>/common/*</url-pattern>
		</filter-mapping>
		<filter-mapping>
			<filter-name>createReqLogInstanceFilter</filter-name>
			<url-pattern>/file/*</url-pattern>
		</filter-mapping>
		
		<!-- 配置验证请求是否有效的过滤器 -->
		<filter>
			<filter-name>varifyReqValidFilter</filter-name>
			<filter-class>com.king.tooth.filter.VarifyReqValidFilter</filter-class>
		</filter>
		<filter-mapping>
			<filter-name>varifyReqValidFilter</filter-name>
			<url-pattern>/common/*</url-pattern>
		</filter-mapping>
		<filter-mapping>
			<filter-name>varifyReqValidFilter</filter-name>
			<url-pattern>/file/*</url-pattern>
		</filter-mapping>
		
		<!-- 配置请求数据的预处理过滤器 -->
		<filter>
			<filter-name>reqDataPreProcesserFilter</filter-name>
			<filter-class>com.king.tooth.filter.ReqDataPreProcesserFilter</filter-class>
		</filter>
		<filter-mapping>
			<filter-name>reqDataPreProcesserFilter</filter-name>
			<url-pattern>/common/*</url-pattern>
		</filter-mapping>
		
<!-- ****************************************************************************************************  -->		
		
		<!-- 名为common的servlet通用控制器 -->
		<servlet>
			<servlet-name>commonServlet</servlet-name>
			<servlet-class>com.king.tooth.web.servlet.CommonServlet</servlet-class>
		</servlet>
		<servlet-mapping>
			<servlet-name>commonServlet</servlet-name>
			<url-pattern>/common/*</url-pattern>
		</servlet-mapping>
		
		<!-- 名为uploadFileServlet的，上传文件的servlet控制器 -->
		<servlet>
			<servlet-name>fileServlet</servlet-name>
			<servlet-class>com.king.tooth.web.servlet.FileServlet</servlet-class>
		</servlet>
		<servlet-mapping>
			<servlet-name>fileServlet</servlet-name>
			<url-pattern>/file/*</url-pattern>
		</servlet-mapping>
		
<!-- ****************************************************************************************************  -->		

</web-app>