

增加异步处理机制，对应一张异步处理结果信息记录表。前段发起请求后，后段收到数据，返回一个操作成功的标示。
后段再将受到的数据放倒一个管道中，按顺序执行，实际执行结果记录到之上的信息表中，用户可以单独去查看结果

字段值的生成规则


上传/导入指定类型的文件功能


3、权限管理这一块，包括增加删除权限，给某个用户授权等通用方法的实现
4、组织结构和部门这一块，实现和权限管理类似的功能


常量改枚举


要考虑的问题：
1、怎么初始化一个系统？怎么把配置信息都提取出来，做一个运行的信息
2、系统启动的时候，怎么读取配置信息？
3、怎么预览配置好的系统？
4、配置好的系统，初始化的时候，需要哪些基础信息

后段也要有权限拦截验证，这个不着急

配置平台的数据到运行平台，怎么实现？


3.初始化插入表的信息的数据到cfgtabledata等中
4.系统启动时，加载数据库中的配置信息[重要]，这个要分配置库，运行库，独立部署库
5.登录后，获取当前用户的角色和权限[重要]



在调用接口的时候，如果用户传入了projectid和createUserId，后台要验证，该请求的用户是否具有权限，查询条件为projectid和createuserid的信息
例如，a用户只能查询createuserid为a的信息，如果a用户调用接口，查询了createuserid为b的，后台要拦截下来不能让他进行查询
如果是管理员用户，则应该不做这种拦截



 
**************************************************************
要放到请求头中的key:
_token
_accountId
_mac
_projId


**************************************************************
部署到正式环境后，有几个要改的地方：
1.log4j.properties的等级改为INFO
2.api.platform.basic.properties中的is.develop的值改为false
3.jdbc.properties中的hibernate.show_sql的值改为false
	                current.sys.type的值，根据配置系统或运行系统，改为相应的值
	                current.sys.database.id给每个系统，重新定义的值，放上去
	                current.sys.project.id给每个系统，重新定义的值，放上去
	                                                     这些数据库连接信息修改：
		                jdbc.dbType=oracle
						jdbc.driverClassName=oracle.jdbc.driver.OracleDriver
						jdbc.url=jdbc:oracle:thin:@localhost:1521:ORCL
						jdbc.username=SmartOneCfg
						jdbc.password=1
					这些信息，根据数据库连接信息，也进行相应的调整(最上面有注释说明)
						db.default.ip=localhost
						db.default.port=1521
						db.default.password=1  这个可以考虑，要不要改为一个复杂值
						db.default.instancename=ORCL
	                
4.api.platform.basic.properties中的account.default.pwd的值修改为一个复杂值
5.api.platform.database.properties中的db.default.filepath的值，改为生产服务器上合适的目录
6.api.platform.sys.properties中app.web.sys.location的值，改成实际运行系统的访问地址（这个值是给配置系统配置的，用来在发布后，调用运行系统的接口）
  			                  cfg.web.sys.ip的值，改成实际配置系统的ip地址（这个值是给运行系统配置的，用来在被调用接口的时候，验证是否是运行系统发过来的）