package org.opcfoundation.webservices.xmlda._1_0;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.0.4
 * 2015-03-20T16:07:36.761+08:00
 * Generated source version: 3.0.4
 * 
 */
@WebServiceClient(name = "OPC_XML_DA_WrapperService", 
                  wsdlLocation = "http://127.0.0.1:8080/OpcXML-Da.wsdl",
                  targetNamespace = "http://opcfoundation.org/webservices/XMLDA/1.0/") 
public class OPCXMLDAWrapperService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://opcfoundation.org/webservices/XMLDA/1.0/", "OPC_XML_DA_WrapperService");
    public final static QName OPCXMLDAWrapperServiceSoap = new QName("http://opcfoundation.org/webservices/XMLDA/1.0/", "OPC_XML_DA_WrapperServiceSoap");
    public final static QName OPCXMLDAWrapperServiceSoap12 = new QName("http://opcfoundation.org/webservices/XMLDA/1.0/", "OPC_XML_DA_WrapperServiceSoap12");
    static {
        URL url = null;
        try {
            url = new URL("http://127.0.0.1:8080/OpcXML-Da.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(OPCXMLDAWrapperService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://127.0.0.1:8080/OpcXML-Da.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public OPCXMLDAWrapperService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public OPCXMLDAWrapperService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public OPCXMLDAWrapperService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns OPCXMLDAWrapperServiceSoap
     */
    @WebEndpoint(name = "OPC_XML_DA_WrapperServiceSoap")
    public OPCXMLDAWrapperServiceSoap getOPCXMLDAWrapperServiceSoap() {
        return super.getPort(OPCXMLDAWrapperServiceSoap, OPCXMLDAWrapperServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns OPCXMLDAWrapperServiceSoap
     */
    @WebEndpoint(name = "OPC_XML_DA_WrapperServiceSoap")
    public OPCXMLDAWrapperServiceSoap getOPCXMLDAWrapperServiceSoap(WebServiceFeature... features) {
        return super.getPort(OPCXMLDAWrapperServiceSoap, OPCXMLDAWrapperServiceSoap.class, features);
    }
    /**
     *
     * @return
     *     returns OPCXMLDAWrapperServiceSoap
     */
    @WebEndpoint(name = "OPC_XML_DA_WrapperServiceSoap12")
    public OPCXMLDAWrapperServiceSoap getOPCXMLDAWrapperServiceSoap12() {
        return super.getPort(OPCXMLDAWrapperServiceSoap12, OPCXMLDAWrapperServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns OPCXMLDAWrapperServiceSoap
     */
    @WebEndpoint(name = "OPC_XML_DA_WrapperServiceSoap12")
    public OPCXMLDAWrapperServiceSoap getOPCXMLDAWrapperServiceSoap12(WebServiceFeature... features) {
        return super.getPort(OPCXMLDAWrapperServiceSoap12, OPCXMLDAWrapperServiceSoap.class, features);
    }

}
